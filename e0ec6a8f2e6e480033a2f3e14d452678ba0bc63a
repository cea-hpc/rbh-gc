{
  "comments": [
    {
      "key": {
        "uuid": "c3367ee2_ade95d6e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2020-12-08T11:06:34Z",
      "side": 1,
      "message": "(functional)",
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d2a1706_a74678ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2020-12-08T15:16:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3367ee2_ade95d6e",
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c044fa3e_ae2500d5",
        "filename": "rbh-gc.c",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1017196
      },
      "writtenOn": "2020-12-07T09:11:21Z",
      "side": 1,
      "message": "question: is there a way id-\u003esize is lesser than sizeof(int)?",
      "range": {
        "startLine": 82,
        "startChar": 53,
        "endLine": 82,
        "endChar": 75
      },
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6253425_58797906",
        "filename": "rbh-gc.c",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2020-12-07T13:55:40Z",
      "side": 1,
      "message": "Yes and no. As mentioned in this commit [0]:\n\n\u003e * While not mandated by design, this ID is expected to have a very specific\n\u003e * format which allows it to be converted to/from a struct file_handle.\n\nThe same assumption can be found in the posix backend implementation.\n\nI think it can be qualified as a bug. Will fix.\n\nhttps://github.com/cea-hpc/librobinhood/commit/c1a41984985b0e828db083a722530fc315e987b9",
      "parentUuid": "c044fa3e_ae2500d5",
      "range": {
        "startLine": 82,
        "startChar": 53,
        "endLine": 82,
        "endChar": 75
      },
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ac1564c_4c0e9612",
        "filename": "rbh-gc.c",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2020-12-08T11:06:34Z",
      "side": 1,
      "message": "I think a flag \"file_handle-compatible\" for backends that all current backend set might make sense, but assuming that ids here can be shorter than int doesn\u0027t really since the whole mechanism here relies on open_by_handle_at.",
      "parentUuid": "f6253425_58797906",
      "range": {
        "startLine": 82,
        "startChar": 53,
        "endLine": 82,
        "endChar": 75
      },
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9637543_f5216e83",
        "filename": "rbh-gc.c",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2020-12-08T15:16:07Z",
      "side": 1,
      "message": "My fear is that a malicious actor could insert a bad fsentry record in a robinhood backend to trigger a buffer overflow. I have a fix on the way.\n\nThe flag is a good idea, but this information is not really tied to backends per-se.\nFor example, the mongo backend makes no assumption about the format of IDs.\n\nIt is more of a per-fsentry information. I __think__ that just trying to handle IDs like they are file-handles, and failing gracefully if they obviously aren\u0027t is a good middle ground (\"obviously\" as in: not the right size, or rejected by open_by_handle_at()).",
      "parentUuid": "6ac1564c_4c0e9612",
      "range": {
        "startLine": 82,
        "startChar": 53,
        "endLine": 82,
        "endChar": 75
      },
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ec8ea32_4730baec",
        "filename": "rbh-gc.c",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1003556
      },
      "writtenOn": "2020-12-11T14:55:59Z",
      "side": 1,
      "message": "robustness to random input makes sense, might want to do some fuzzing later if time.\n(I think this can come in a later patch though)",
      "parentUuid": "c9637543_f5216e83",
      "range": {
        "startLine": 82,
        "startChar": 53,
        "endLine": 82,
        "endChar": 75
      },
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4110f3cb_247ec63a",
        "filename": "rbh-gc.c",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 1010215
      },
      "writtenOn": "2020-12-11T15:58:37Z",
      "side": 1,
      "message": "Yes, I still need to learn how to do that by the way \u003d)\n\nAlso, forgot to publish the fix, sorry \u003d/",
      "parentUuid": "8ec8ea32_4730baec",
      "range": {
        "startLine": 82,
        "startChar": 53,
        "endLine": 82,
        "endChar": 75
      },
      "revId": "e0ec6a8f2e6e480033a2f3e14d452678ba0bc63a",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": true
    }
  ]
}